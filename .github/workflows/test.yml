name: Test and Quality Assurance

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    name: Test Go Backend
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:14-3.2
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: strava_coverage_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Run go mod verify
      run: go mod verify

    - name: Run go vet
      run: go vet ./...

    - name: Install golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2

    - name: Run golangci-lint
      run: golangci-lint run --timeout=5m

    - name: Set up test database
      env:
        DB_URL: postgres://postgres:postgres@localhost:5432/strava_coverage_test?sslmode=disable
      run: |
        # Run migrations
        for migration in internal/storage/migrations/*.sql; do
          echo "Applying migration: $migration"
          psql "$DB_URL" -f "$migration"
        done

    - name: Run tests
      env:
        DB_URL: postgres://postgres:postgres@localhost:5432/strava_coverage_test?sslmode=disable
        STRAVA_CLIENT_ID: test_client_id
        STRAVA_CLIENT_SECRET: test_client_secret
        STRAVA_REDIRECT_URI: http://localhost:8080/oauth/callback
      run: |
        go test -v -race -coverprofile=coverage.out ./...

    - name: Generate coverage report
      run: go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.html

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test-backend]

    services:
      postgres:
        image: postgis/postgis:14-3.2
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: strava_coverage_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build backend
      run: go build -o server cmd/server/main.go

    - name: Set up test database
      env:
        DB_URL: postgres://postgres:postgres@localhost:5432/strava_coverage_test?sslmode=disable
      run: |
        for migration in internal/storage/migrations/*.sql; do
          psql "$DB_URL" -f "$migration"
        done

    - name: Start backend server
      env:
        DB_URL: postgres://postgres:postgres@localhost:5432/strava_coverage_test?sslmode=disable
        STRAVA_CLIENT_ID: test_client_id
        STRAVA_CLIENT_SECRET: test_client_secret
        STRAVA_REDIRECT_URI: http://localhost:8080/oauth/callback
        GIN_MODE: release
      run: |
        ./server &
        sleep 5

    - name: Run integration tests
      run: |
        # Test health endpoint
        curl -f http://localhost:8080/api/health
        
        # Test basic API endpoints
        curl -f http://localhost:8080/api/cities || echo "Cities endpoint tested"
        
        echo "Integration tests passed!"