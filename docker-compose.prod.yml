version: '3.8'

services:
  # Production database setup
  db:
    image: postgis/postgis:16-3.4
    restart: unless-stopped
    environment:
      POSTGRES_DB: strava_coverage
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./internal/storage/migrations:/docker-entrypoint-initdb.d/migrations:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d strava_coverage"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application server
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    restart: unless-stopped
    ports:
      - "${PORT:-8080}:8080"
    environment:
      - STRAVA_CLIENT_ID=${STRAVA_CLIENT_ID}
      - STRAVA_CLIENT_SECRET=${STRAVA_CLIENT_SECRET}
      - STRAVA_REDIRECT_URI=${STRAVA_REDIRECT_URI}
      - DB_URL=postgres://${DB_USER:-postgres}:${DB_PASSWORD}@db:5432/strava_coverage?sslmode=disable
      - GIN_MODE=release
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pgdata:
    driver: local

networks:
  default:
    name: strava-coverage-prod